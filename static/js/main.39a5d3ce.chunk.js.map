{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","pressedButton","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,uBAFhB,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,WAAYE,KAdhC,uDAKE,WACEE,SAASC,iBAAiB,UAAWC,KAAKL,iBAN9C,kCASE,WACEG,SAASG,oBAAoB,UAAWD,KAAKL,iBAVjD,oBAiBE,WACE,IAAQD,EAAeM,KAAKP,MAApBC,WAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,4CAAyDR,EAAzD,aAtBR,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.39a5d3ce.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string | KeyboardEvent\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.pressedButton);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.pressedButton);\n  }\n\n  pressedButton = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{`The last pressed key is [${pressedKey}]`}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}