{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","pressed","pressedButton","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,0BACZC,SAAS,GAHb,EAcEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,MAClC,EAAKD,SAAS,CAAEH,SAAS,KAhB7B,uDAME,WACEK,SAASC,iBAAiB,UAAWC,KAAKN,iBAP9C,kCAUE,WACEI,SAASG,oBAAoB,UAAWD,KAAKN,iBAXjD,oBAmBE,WACE,MAAgCM,KAAKT,MAA7BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,QAEpB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAO,mCACwBD,EADxB,KAEJA,UA3Bd,GAAyBW,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.f1cf8bca.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string | KeyboardEvent;\n  pressed: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n    pressed: false,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.pressedButton);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.pressedButton);\n  }\n\n  pressedButton = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n    this.setState({ pressed: true });\n  };\n\n  render() {\n    const { pressedKey, pressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressed\n            ? `The last pressed key is [${pressedKey}]`\n            : pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}